# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

# https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu1804-README.md
pool: 
  name: 'SelfHosted'
  vmImage: 'ZaitaOpenSuSe'

jobs:
- job: "Compile_Casal2"
  timeoutInMinutes: 0
  steps:
  - script: |
      cd BuildSystem
      ./doBuild.sh thirdparty adolc
    displayName: 'Build third-party library - adolc'

  - script: |
      cd BuildSystem
      ./doBuild.sh thirdparty betadiff
    displayName: 'Build third-party library - betadiff'

  - script: |
      cd BuildSystem
      ./doBuild.sh thirdparty boost
    displayName: 'Build third-party libraries - boost'

  - script: |
      cd BuildSystem
      ./doBuild.sh thirdparty cppad
    displayName: 'Build third-party libraries - cppad'

  - script: |
      cd BuildSystem
      ./doBuild.sh thirdparty dlib
    displayName: 'Build third-party libraries - dlib'

  - script: |
      cd BuildSystem
      ./doBuild.sh thirdparty googletest_googlemock
    displayName: 'Build third-party libraries - google test and mock'

  - script: |
      cd BuildSystem
      ./doBuild.sh thirdparty parser
    displayName: 'Build third-party libraries - parser'

  - script: |
      cd BuildSystem
      set CASAL2_BUILD_THREADS=16
      ./doBuild.sh debug
    displayName: 'Build "Debug" standalone binary'

  - script: |
      cd BuildSystem
      set CASAL2_BUILD_THREADS=16
      ./doBuild.sh debug betadiff
    displayName: 'Build "Debug" standalone binary'

  - script: |
      cd BuildSystem
      set CASAL2_BUILD_THREADS=16
      ./doBuild.sh test
    displayName: 'Build "Unit Test" standalone binary'

  - script: |
      cd BuildSystem/bin/linux_gcc/test/
      ./casal2
    displayName: 'Run Unit Tests standalone binary'


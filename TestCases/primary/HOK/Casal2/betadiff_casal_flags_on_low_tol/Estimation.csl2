## Structure of my estimation.csl2
# - Define Minimiser along with subcommands such as gradient tolerance to stop, how many evaluations to stop at etc.
# - Define Estimates = Parameters being estimated with assumed priors and bounds
# - Define Penalties = Additional Penalties assumed on these models
# - Define AdditionalPriors = Analogous to Penalties really.

################################### Minimiser ###############################

@minimiser betadiff
type betadiff
tolerance 1e-9
iterations 10000
evaluations 10000
covariance True

@mcmc mcmc
type random_walk
start 0.3
length 4000000
keep 1000
step_size 0.02
adapt_stepsize_at 20000 40000 60000 80000 100000
burn_in 100000
proposal_distribution t
adapt_stepsize_method double_half
#subsample_size 2000
#systematic 1
max_correlation 0.9


################################### Estimates ###############################
## Format for parameter in @estimate block = type[label].parameter
#################
## Catchabilities
#################
@estimate CSacousq
type lognormal
parameter catchability[CSacous].q
mu 0.55
cv 0.90
lower_bound 0.01
upper_bound 4.53

@estimate WCacousq
type lognormal
parameter catchability[WCacous].q
mu 0.39
cv 0.77
lower_bound 0.01
upper_bound 3.35

@estimate CRsumq
type lognormal
parameter catchability[CRsum].q
mu 0.15
cv 0.65
lower_bound 0.016
upper_bound 0.51

@estimate SAsumq
type lognormal
parameter catchability[SAsum].q
mu 0.17
cv 0.61
lower_bound 0.020
upper_bound 0.51


@estimate SAautq
type lognormal
parameter catchability[SAaut].q
mu 0.17
cv 0.61
lower_bound 0.020
upper_bound 0.51

#######################
## Survey Process Error
#######################

@estimate CR_process_error
parameter observation[CRsumbio].process_error
type uniform
lower_bound 0.0
upper_bound 1

@estimate SA_process_error
parameter observation[SAsumbio].process_error
type uniform
lower_bound 0.0
upper_bound 1


#######
## B0's
#######
## this includes your funny transformation see the manual for how Casal2 applies transformations
@estimate B0_E_with_total_log_b0_prior
parameter parameter_transformation[log_sum_b0].log_total_parameter
type uniform
lower_bound 12.6
upper_bound 16.2

@estimate B0_W_with_proportion_prior
parameter parameter_transformation[log_sum_b0].total_proportion_parameter
type beta
mu 0.344
sigma 0.072
a 0.1
b 0.6
lower_bound 0.11
upper_bound 0.59

##########################
## Estimate Transformation
##########################
@parameter_transformation log_sum_b0
type log_sum
parameters process[recruit_E].b0 process[recruit_W].b0
prior_applies_to_restored_parameters false


## Natural Mortality
@estimate M_all
parameter process[Instant_mortality].m{west.sa}
same process[Instant_mortality].m{east.cr} process[Instant_mortality].m{west.cr} process[Instant_mortality].m{west.wc} process[Instant_mortality].m{east.cs}
type lognormal
mu 0.298
cv 0.153
lower_bound 0.22
upper_bound 0.44
## Western Home Migration
# Note to Andy, in some selectivities I have removed the sexed aspect, because you force them to be the same in estimation
# there is no point in my mind why you would different selectivities for each sex if you force them to be the same.
## Western spawning fishery time_varying parameter
@estimate Wspsl_shift_param
parameter time_varying[shifted_mu].a
type normal_by_stdev
mu 0.0
sigma 0.25
lower_bound -10.24
upper_bound 2.24
#######
## YCS
#######
@estimate YCS_E
parameter process[recruit_E].ycs_values{1975:2016}
type lognormal
#YCS_years						1975	1976	1977	1978	1979	1980	1981	1982	1983	1984	1985	1986	1987	1988	1989	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	2011	2012	2013	2014	2015	2016
mu							1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
cv							0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95
lower_bound						0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06
upper_bound						8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6

@estimate YCS_W
parameter process[recruit_W].ycs_values{1975:2016}
type lognormal
#YCS_years						1975	1976	1977	1978	1979	1980	1981	1982	1983	1984	1985	1986	1987	1988	1989	1990	1991	1992	1993	1994	1995	1996	1997	1998	1999	2000	2001	2002	2003	2004	2005	2006	2007	2008	2009	2010	2011	2012	2013	2014	2015	2016
mu							1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
cv							0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95	0.95
lower_bound						0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06	0.06
upper_bound						8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6	8.6
#########################
## Selectivity Parameter's
#########################
/*
# male
@estimate M_male_x0
parameter selectivity[M_male].x0
type uniform
lower_bound 5.1
upper_bound 9.1

@estimate M_male_y0
parameter selectivity[M_male].y0
type uniform
lower_bound 0.01
upper_bound 0.30

@estimate M_male_y1
parameter selectivity[M_male].y1
type uniform
lower_bound 0.5
upper_bound 2.0

@estimate M_male_y2
parameter selectivity[M_male].y2
type uniform
lower_bound 0.5
upper_bound 2.0

# female
@estimate M_female_x0
parameter selectivity[M_female].x0
type uniform
lower_bound 5.1
upper_bound 9.1

@estimate M_female_y0
parameter selectivity[M_female].y0
type uniform
lower_bound 0.01
upper_bound 0.30

@estimate M_female_y1
parameter selectivity[M_female].y1
type uniform
lower_bound 0.5
upper_bound 2.0

@estimate M_female_y2
parameter selectivity[M_female].y2
type uniform
lower_bound 0.5
upper_bound 2.0
*/

@estimate sel_Whome
parameter selectivity[sel_Whome].v
type uniform
lower_bound 0.01 0.01 0.01 0 0 0 0 1	## note forcing last value to be what ever it is initialised at
upper_bound    1    1    1 1 1 1 1 1

## Eastern-Spawning Migration
# male
@estimate sel_Espmg_male
parameter selectivity[sel_Espmg].v
type uniform
lower_bound 0 0 0 0 0 0 0 0
upper_bound 1 1 1 1 1 1 1 1

## Western-Spawning Migration
# male
@estimate sel_Wspmg_male
parameter selectivity[sel_Wspmg].v
type uniform
lower_bound 0 0 0 0 0 0 0 0
upper_bound 1 1 1 1 1 1 1 1
/*
#female
@estimate sel_Espmg_female
parameter selectivity[sel_Espmg_Female].v
type uniform
lower_bound 0 0 0 0 0 0 0 0.6
upper_bound 1 1 1 1 1 1 1 1

#female
@estimate sel_Wspmg_female
parameter selectivity[sel_Wspmg_Female].v
type uniform
lower_bound 0 0 0 0 0 0 0 0.6
upper_bound 1 1 1 1 1 1 1 1
*/
# fishing selectivities
## Eastern Non-Spawning Fishery
@estimate Enspsl_mu
parameter selectivity[Enspsl].mu
type uniform
lower_bound 1
upper_bound 17

@estimate Enspsl_s_l
parameter selectivity[Enspsl].sigma_l
type uniform
lower_bound 1
upper_bound 50

@estimate Enspsl_s_r
parameter selectivity[Enspsl].sigma_r
type uniform
lower_bound 1
upper_bound 50

## Western Non-Spawning Fishery
@estimate Wnspsl_mu
parameter selectivity[Wnspsl].mu
type uniform
lower_bound 1
upper_bound 17

@estimate Wnspsl_s_l
parameter selectivity[Wnspsl].sigma_l
lower_bound 1
upper_bound 50
type uniform

@estimate Wnspsl_s_r
parameter selectivity[Wnspsl].sigma_r
type uniform
lower_bound 1
upper_bound 50
## Eastern Spawning Fishery
# note - I am forcing the western spawning fishery to be the same.
@estimate Espsl_mu
parameter selectivity[Espsl].mu
same selectivity[Wspsl].mu
type uniform
lower_bound 1
upper_bound 17

@estimate Espsl_s_l
parameter selectivity[Espsl].sigma_l
same selectivity[Wspsl].sigma_l
type uniform
lower_bound 1
upper_bound 50

@estimate Espsl_s_r
parameter selectivity[Espsl].sigma_r
same selectivity[Wspsl].sigma_r
type uniform
lower_bound 1
upper_bound 50

## Chatham Rise Survey
@estimate CRsl_mu
parameter selectivity[CRsl].mu
type uniform
lower_bound 1
upper_bound 17

@estimate CRsl_s_l
parameter selectivity[CRsl].sigma_l
type uniform
lower_bound 1
upper_bound 50

@estimate CRsl_s_r
parameter selectivity[CRsl].sigma_r
type uniform
lower_bound 1
upper_bound 50

## Sub Antarctic Survey
@estimate SAsl_mu
parameter selectivity[SAsl].mu
type uniform
lower_bound 1
upper_bound 17

@estimate SAsl_s_l
parameter selectivity[SAsl].sigma_l
type uniform
lower_bound 1
upper_bound 50

@estimate SAsl_s_r
parameter selectivity[SAsl].sigma_r
type uniform
lower_bound 1
upper_bound 50
################################### Penalties ###############################
@penalty CatchMustBeTaken
type process
log_scale True
multiplier 10000

################################### Additional Priors ###############################
## Year class prior
@additional_prior YCS.eq.16
type element_difference
parameter process[recruit_E].ycs_values{2016}
second_parameter process[recruit_W].ycs_values{2016}
multiplier 1000


@additional_prior sp.migr
type element_difference
parameter selectivity[sel_Espmg].values{8}  ## 8 year old values
second_parameter selectivity[sel_Wspmg].values{8}  ## 8 year old values
multiplier 100
## Ogive_difference_prior
#Female

/*
@additional_prior sp.migr.F
type element_difference
parameter selectivity[sel_Espmg_Female].values{8}  ## 8 year old values
second_parameter selectivity[sel_Wspmg_Female].values{8}  ## 8 year old values
multiplier 100
#male
@additional_prior sp.migr.M
type element_difference
parameter selectivity[sel_Espmg_Male].values{8}
second_parameter selectivity[sel_Wspmg_Male].values{8}
multiplier 100
*/

## The old HOKI user Defined penalty is actually just a log_normal evaluation of specific age based selectivities
# Have generalised prior_penalty_Mprior3.cpp which is from Patrick's report, WG-HOK-2007/11,
# mu = -1.817 sd = 0.48
# we can translate this into a log_mean and cv via the following
# mnM= exp(-1.817 + 0.5 * pow(0.48,2));
# mnM = 0.182355
# cv = sqrt(exp(sd^2) - 1)
# cv = 0.5090222

/*
@additional_prior prior_on_Mmale
type lognormal
parameter selectivity[M_male].values{5:9}
mu 0.182355
cv 0.5090222

@additional_prior prior_on_Mfemale
type lognormal
parameter selectivity[M_female].values{5:9}
mu 0.182355
cv 0.5090222
*/
